// TCSS 305 - Spring 2016
// Assignment 5 - PowerPaint
package tools;

import java.awt.Shape;
import java.awt.geom.Rectangle2D;

/**
 * A rectangle-drawing tool.
 * 
 * @author Kaitlyn Kinerk
 * @version 1.0
 */
public class RectangleTool extends AbstractPaintShape {
    
    @Override
    public Shape getShape() {
        // Draws a rectangle starting from the standard upper-left corner starting point.
        Rectangle2D.Double rect = new Rectangle2D.Double(getStartPoint().getX(), 
                                getStartPoint().getY(), getWidth(), getHeight());
    
        // Draws a rectangle starting from the lower-right corner.
        if (getEndPoint().getX() < getStartPoint().getX() && getEndPoint().getY() 
                       < getStartPoint().getY()) {
            rect = new Rectangle2D.Double(getEndPoint().getX(), getEndPoint().getY(), 
                                          getWidth(), getHeight());
        // Draws a rectangle starting from the upper-right corner.
        } else if (getEndPoint().getX() < getStartPoint().getX()) {
            rect = new Rectangle2D.Double(getEndPoint().getX(), getStartPoint().getY(), 
                                          getWidth(), getHeight());
        // Draws a rectangle starting from the lower-left corner.
        } else if (getEndPoint().getY() < getStartPoint().getY()) {
            rect = new Rectangle2D.Double(getStartPoint().getX(), getEndPoint().getY(), 
                                          getWidth(), getHeight());
        }
        return rect;
    }
    
    /**
     * Calculates the width of a drawn rectangle.
     * 
     * @return the width of the rectangle.
     */
    private double getWidth() {
        return Math.abs(getEndPoint().getX() - getStartPoint().getX());
    }
    
    /**
     * Calculates the height of a drawn rectangle.
     * 
     * @return the height of the rectangle.
     */
    private double getHeight() {
        return Math.abs(getEndPoint().getY() - getStartPoint().getY());
    }

}
