/**
 * 
 */
package model;

import java.awt.Point;
import java.awt.Shape;
import java.awt.geom.Rectangle2D;

/**
 * @author Kaitlyn
 *
 */
public class Rectangle extends AbstractPaintShape {
    
    @Override
    public Shape getShape() {
        Rectangle2D.Double rect = new Rectangle2D.Double(getStartPoint().getX(), 
                                getStartPoint().getY(), getWidth(), getHeight());
    
        if (getEndPoint().getX() < getStartPoint().getX() && getEndPoint().getY() 
                       < getStartPoint().getY()) {
            rect = new Rectangle2D.Double(getEndPoint().getX(), getEndPoint().getY(), 
                                          getWidth(), getHeight());
        } else if (getEndPoint().getX() < getStartPoint().getX()) {
            rect = new Rectangle2D.Double(getEndPoint().getX(), getStartPoint().getY(), 
                                          getWidth(), getHeight());
        } else if (getEndPoint().getY() < getStartPoint().getY()) {
            rect = new Rectangle2D.Double(getStartPoint().getX(), getEndPoint().getY(), 
                                          getWidth(), getHeight());
        }
        return rect;
    }
    
    private double getWidth() {
        return Math.abs(getEndPoint().getX() - getStartPoint().getX());
    }
    
    private double getHeight() {
        return Math.abs(getEndPoint().getY() - getStartPoint().getY());
    }

}
