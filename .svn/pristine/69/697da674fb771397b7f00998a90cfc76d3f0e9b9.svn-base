/**
 * 
 */
package view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ButtonGroup;
import javax.swing.JToggleButton;
import javax.swing.JToolBar;

import tools.EllipseTool;
import tools.LineTool;
import tools.PencilTool;
import tools.RectangleTool;




/**
 * A tool bar for the PowerPaint program.
 * 
 * @author Kaitlyn Kinerk
 * @version 1.1
 *
 */
public class ToolBar extends JToolBar { 


    /** A generated serial number.*/
    private static final long serialVersionUID = 304052708691137548L;
                    
    private DrawingPanel myPanel;
    
    private PencilTool myPencil;
    
    private LineTool myLine;
    
    private RectangleTool myRectangle;
    
    private EllipseTool myEllipse;
    
    /** Constructs a tool bar. */
    public ToolBar(DrawingPanel thePanel) {
        super(); 
        
        myPanel = thePanel;
        myPencil = new PencilTool();
        myLine = new LineTool();
        myRectangle = new RectangleTool();
        myEllipse = new EllipseTool();
        
        final ButtonGroup btngrp = new ButtonGroup();
        
       
        
        JToggleButton pencil = new JToggleButton("Pencil");
        pencil.addActionListener(new PencilListener());
        btngrp.add(pencil);
        add(pencil);
        
        JToggleButton line = new JToggleButton("Line");
        line.addActionListener(new LineListener());
        btngrp.add(line);
        add(line);
        
        JToggleButton rectangle = new JToggleButton("Rectangle");
        rectangle.addActionListener(new RectangleListener());
        btngrp.add(rectangle);
        add(rectangle);
        
        JToggleButton ellipse = new JToggleButton("Ellipse");
        ellipse.addActionListener(new EllipseListener());
        btngrp.add(ellipse);
        add(ellipse);
       
        btngrp.clearSelection();
        pencil.setSelected(true);
        
        myPanel.setCurrentShape(myPencil);
        
    }
    

    

    private class PencilListener implements ActionListener {

        
        @Override
        public void actionPerformed(ActionEvent e) {
            myPanel.setCurrentShape(myPencil);
            
        }
        
    }
    
    private class LineListener implements ActionListener {

       
        
        @Override
        public void actionPerformed(ActionEvent e) {
            myPanel.setCurrentShape(myLine);
            
        }
        
    }
    
    private class RectangleListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            myPanel.setCurrentShape(myRectangle);
            
        }
        
    }
    
    private class EllipseListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            myPanel.setCurrentShape(myEllipse);
            
        }
        
    }
   

}
